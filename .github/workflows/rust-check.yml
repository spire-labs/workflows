on:
  workflow_call:
    inputs:
      rust-version:
        type: string
        required: false
        default: nightly
        description: rust version to use for checks
  schedule:
    - cron: '0 7 * * 1'  # Runs every Monday at 07:00 UTC on main

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ inputs.rust-version }}

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock')}}-${{ github.ref_name }}
          restore-keys: 
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock')}}-main
            ${{ runner.os }}-cargo-
          retention-days: 7

      - name: Install cargo check tools
        run: |
          ls -al ~/.cargo/bin/
          for tool in cargo-deny cargo-outdated cargo-udeps cargo-audit cargo-pants taplo-cli; do
            if ! command -v "$tool" &> /dev/null; then
              echo "Installing $tool..."
              cargo install --locked "$tool" || true
            else
              echo "$tool already installed"
            fi
          done

      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets --all-features -- -D warnings
          taplo lint
          taplo fmt --check
      

      - name: Dependency Check
        continue-on-error: true
        run: |
          cargo deny check
          cargo outdated --exit-code 1
          cargo udeps
          rm -rf ~/.cargo/advisory-db
          cargo audit
          cargo pants

      - name: Test
        run: cargo test --all-targets --all-features
